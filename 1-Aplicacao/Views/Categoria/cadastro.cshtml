@{
  ViewData[index: "Title"] = "Categorias";
}
<h2> Categorias </h2>
<hr />

@model SistemVenda.Models.CategoriaViewModel

@{
  string? disabled = (Model.Codigo == null) ? "disabled" : string.Empty;
}

<form asp-controller="Categoria" asp-action="Cadastro" method="post">
  <input type="hidden" asp-for="Codigo" value="@Model.Codigo" />

  <div class="form-gruoup">
    <div class="col-4"></div>
    <label> Descrição </label>
    <input asp-for="Descricao" type="text" value="@Model.Descricao" class="form-control" />
    <span asp-validation-for="Descricao" class="text-danger"></span>
  </div>
  <br />
  <div class="col">
    <button type="button" class="btn btn-info" onclick="Novo()"> Novo </button>
    <button type="submit" class="btn btn-success"> Gravar </button>
    <button type="button" class="btn btn-warning" onclick="Listagem()"> Listagem </button>
    <button type="button" class="btn btn-danger" onclick="Excluir(@Model.Codigo)"> Excluir </button>
  </div>
</form>

<script>
  function Novo() {
    Request("Cadastro");
  }
  function Listagem() {
    Request("Index");
  }
  async function Excluir(Codigo) {
    var response = await fetch(`/Categoria/Excluir/${Codigo}`, {
      method: "DELETE",
      headers: {
        "Content-Type": "application/json"
      }
    });

    const data = await response.json();
    if (data.Success && data.Data) {
      window.location.href = "/Categoria/Index";
    } else {
      alert(data.Message);
    }
  }
  function Request(rota) {
    window.location.href = `/Categoria/${rota}`;
  }
</script>